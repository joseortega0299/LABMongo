/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package labmongodb;

import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.mongodb.BasicDBObject;
import com.mongodb.DBCursor;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;

/**
 *
 * @author joseo
 */
public class FormConsultas extends javax.swing.JFrame {

    /**
     * Creates new form FormConsultas
     */
    public MongoCollection collection;
    public MongoClient mongoClient;
    public MongoDatabase database;
    public FormConsultas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnConsultaA = new javax.swing.JButton();
        btnCOnsultaB = new javax.swing.JButton();
        btnConsultaC = new javax.swing.JButton();
        btnConsultaD = new javax.swing.JButton();
        btnConsultaE = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFranquicia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAnoDesde = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAnoHasta = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCompania = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtConsultaE = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setText("Consultas");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Género", "Director", "Franquicia", "País", "Año", "Duración", "Compañia", "Actores"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnConsultaA.setText("Consulta A");
        btnConsultaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaAActionPerformed(evt);
            }
        });

        btnCOnsultaB.setText("Consulta B");
        btnCOnsultaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCOnsultaBActionPerformed(evt);
            }
        });

        btnConsultaC.setText("Consulta C");
        btnConsultaC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaCActionPerformed(evt);
            }
        });

        btnConsultaD.setText("Consulta D");
        btnConsultaD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaDActionPerformed(evt);
            }
        });

        btnConsultaE.setText("Consulta E");
        btnConsultaE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaEActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Búsqueda");

        jLabel3.setText("Nombre: ");

        jLabel4.setText("Franquicia: ");

        txtFranquicia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFranquiciaActionPerformed(evt);
            }
        });

        jLabel5.setText("Año Desde:");

        txtAnoDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnoDesdeActionPerformed(evt);
            }
        });

        jLabel6.setText("Año Hasta: ");

        jLabel7.setText("Compañia: ");

        jLabel8.setText("Cantidad de Películas (Consulta E): ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel2)
                .addGap(517, 517, 517)
                .addComponent(jLabel1)
                .addContainerGap(702, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtConsultaE, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFranquicia, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAnoDesde)
                                    .addComponent(txtAnoHasta)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCompania)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCOnsultaB, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConsultaA, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConsultaC, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConsultaD, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConsultaE, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnConsultaA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCOnsultaB)
                                .addGap(18, 18, 18)
                                .addComponent(btnConsultaC)
                                .addGap(18, 18, 18)
                                .addComponent(btnConsultaD)
                                .addGap(18, 18, 18)
                                .addComponent(btnConsultaE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtFranquicia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtAnoDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtAnoHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtCompania, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConsultaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultaCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaCActionPerformed
        DefaultTableModel Model = (DefaultTableModel) jTable1.getModel();
           //Clear Jtable1 
           while(Model.getRowCount() > 0){
               for(int i =0; i<Model.getRowCount(); i++){
                   Model.removeRow(i);
               }
           }
           // Connect to MongoDB Server on localhost, port 27017 (default)
           mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
           // Connect to Database "test"
           database = mongoClient.getDatabase("test");
           //System.out.println("Successful database connection established. \n");   
           collection = database.getCollection("TestMovies");
           String nombrexo;
           String generoxo;
           String directorxo;
           String franquiciaxo;
           String paisxo;
           String anoxo;
           String duracionxo;
           String companiaxo;
           String actoresxo;
           String idxo;
           
           String AnoDesdexyz = txtAnoDesde.getText();
           String AnoHastaxyz = txtAnoHasta.getText();
           
            //Find and print ALL documents in the collection
            //System.out.println("Printing all the documents.");
            FindIterable<Document> cursor = collection.find(new BasicDBObject("Ano", //
                      new BasicDBObject("$gte", AnoDesdexyz).append("$lte", AnoHastaxyz)));
             for(Document doc : cursor){
                  Document thirdxx = (Document) doc;
                  String objectx = thirdxx.toJson();
                  //System.out.println(objectx);
                  JsonObject jsonObject = new JsonParser().parse(objectx).getAsJsonObject();
                  nombrexo = jsonObject.get("Nombre").getAsString();
                  generoxo = jsonObject.get("Genero").getAsString();
                  directorxo = jsonObject.get("Director").getAsString();
                  franquiciaxo = jsonObject.get("Franquicia").getAsString();
                  paisxo = jsonObject.get("Pais").getAsString();
                  anoxo = jsonObject.get("Ano").getAsString();
                  duracionxo = jsonObject.get("Duracion").getAsString();
                  companiaxo = jsonObject.get("Compania").getAsString();
                  actoresxo = jsonObject.get("Actores").getAsString();
                  //idxo = jsonObject.get("$oid").getAsString();
                  //System.out.println(idxo);
                  
                  Model.addRow(new Object[]{nombrexo,generoxo,directorxo,franquiciaxo,paisxo,anoxo,duracionxo,companiaxo,actoresxo});
             }
    }//GEN-LAST:event_btnConsultaCActionPerformed

    private void txtFranquiciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFranquiciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFranquiciaActionPerformed

    private void txtAnoDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnoDesdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnoDesdeActionPerformed

    private void btnConsultaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaAActionPerformed
           DefaultTableModel Model = (DefaultTableModel) jTable1.getModel();
           //Clear Jtable1 
           while(Model.getRowCount() > 0){
               for(int i =0; i<Model.getRowCount(); i++){
                   Model.removeRow(i);
               }
           }
           // Connect to MongoDB Server on localhost, port 27017 (default)
           mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
           // Connect to Database "test"
           database = mongoClient.getDatabase("test");
           //System.out.println("Successful database connection established. \n");   
           collection = database.getCollection("TestMovies");
           String nombrexo;
           String generoxo;
           String directorxo;
           String franquiciaxo;
           String paisxo;
           String anoxo;
           String duracionxo;
           String companiaxo;
           String actoresxo;
           String idxo;
           
           String Nombrexyz = txtTitulo.getText();
           
            //Find and print ALL documents in the collection
            //System.out.println("Printing all the documents.");
            FindIterable<Document> cursor = collection.find(new BasicDBObject("Nombre", Nombrexyz));
             for(Document doc : cursor){
                  Document thirdxx = (Document) doc;
                  String objectx = thirdxx.toJson();
                  //System.out.println(objectx);
                  JsonObject jsonObject = new JsonParser().parse(objectx).getAsJsonObject();
                  nombrexo = jsonObject.get("Nombre").getAsString();
                  generoxo = jsonObject.get("Genero").getAsString();
                  directorxo = jsonObject.get("Director").getAsString();
                  franquiciaxo = jsonObject.get("Franquicia").getAsString();
                  paisxo = jsonObject.get("Pais").getAsString();
                  anoxo = jsonObject.get("Ano").getAsString();
                  duracionxo = jsonObject.get("Duracion").getAsString();
                  companiaxo = jsonObject.get("Compania").getAsString();
                  actoresxo = jsonObject.get("Actores").getAsString();
                  //idxo = jsonObject.get("$oid").getAsString();
                  //System.out.println(idxo);
                  
                  Model.addRow(new Object[]{nombrexo,generoxo,directorxo,franquiciaxo,paisxo,anoxo,duracionxo,companiaxo,actoresxo});
             }
    }//GEN-LAST:event_btnConsultaAActionPerformed

    private void btnCOnsultaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCOnsultaBActionPerformed
        DefaultTableModel Model = (DefaultTableModel) jTable1.getModel();
           //Clear Jtable1 
           while(Model.getRowCount() > 0){
               for(int i =0; i<Model.getRowCount(); i++){
                   Model.removeRow(i);
               }
           }
           // Connect to MongoDB Server on localhost, port 27017 (default)
           mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
           // Connect to Database "test"
           database = mongoClient.getDatabase("test");
           //System.out.println("Successful database connection established. \n");   
           collection = database.getCollection("TestMovies");
           String nombrexo;
           String generoxo;
           String directorxo;
           String franquiciaxo;
           String paisxo;
           String anoxo;
           String duracionxo;
           String companiaxo;
           String actoresxo;
           String idxo;
           
           String Franquiciaxyz = txtFranquicia.getText();
           
            //Find and print ALL documents in the collection
            //System.out.println("Printing all the documents.");
            FindIterable<Document> cursor = collection.find(new BasicDBObject("Franquicia", Franquiciaxyz));
             for(Document doc : cursor){
                  Document thirdxx = (Document) doc;
                  String objectx = thirdxx.toJson();
                  //System.out.println(objectx);
                  JsonObject jsonObject = new JsonParser().parse(objectx).getAsJsonObject();
                  nombrexo = jsonObject.get("Nombre").getAsString();
                  generoxo = jsonObject.get("Genero").getAsString();
                  directorxo = jsonObject.get("Director").getAsString();
                  franquiciaxo = jsonObject.get("Franquicia").getAsString();
                  paisxo = jsonObject.get("Pais").getAsString();
                  anoxo = jsonObject.get("Ano").getAsString();
                  duracionxo = jsonObject.get("Duracion").getAsString();
                  companiaxo = jsonObject.get("Compania").getAsString();
                  actoresxo = jsonObject.get("Actores").getAsString();
                  //idxo = jsonObject.get("$oid").getAsString();
                  //System.out.println(idxo);
                  
                  Model.addRow(new Object[]{nombrexo,generoxo,directorxo,franquiciaxo,paisxo,anoxo,duracionxo,companiaxo,actoresxo});
             }
    }//GEN-LAST:event_btnCOnsultaBActionPerformed

    private void btnConsultaDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaDActionPerformed
        DefaultTableModel Model = (DefaultTableModel) jTable1.getModel();
           //Clear Jtable1 
           while(Model.getRowCount() > 0){
               for(int i =0; i<Model.getRowCount(); i++){
                   Model.removeRow(i);
               }
           }
           // Connect to MongoDB Server on localhost, port 27017 (default)
           mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
           // Connect to Database "test"
           database = mongoClient.getDatabase("test");
           //System.out.println("Successful database connection established. \n");   
           collection = database.getCollection("TestMovies");
           String nombrexo;
           String generoxo;
           String directorxo;
           String franquiciaxo;
           String paisxo;
           String anoxo;
           String duracionxo;
           String companiaxo;
           String actoresxo;
           String idxo;
           
           String Companiaxyz = txtCompania.getText();
           
            //Find and print ALL documents in the collection
            //System.out.println("Printing all the documents.");
            FindIterable<Document> cursor = collection.find(new BasicDBObject("Compania", Companiaxyz));
             for(Document doc : cursor){
                  Document thirdxx = (Document) doc;
                  String objectx = thirdxx.toJson();
                  //System.out.println(objectx);
                  JsonObject jsonObject = new JsonParser().parse(objectx).getAsJsonObject();
                  nombrexo = jsonObject.get("Nombre").getAsString();
                  generoxo = jsonObject.get("Genero").getAsString();
                  directorxo = jsonObject.get("Director").getAsString();
                  franquiciaxo = jsonObject.get("Franquicia").getAsString();
                  paisxo = jsonObject.get("Pais").getAsString();
                  anoxo = jsonObject.get("Ano").getAsString();
                  duracionxo = jsonObject.get("Duracion").getAsString();
                  companiaxo = jsonObject.get("Compania").getAsString();
                  actoresxo = jsonObject.get("Actores").getAsString();
                  //idxo = jsonObject.get("$oid").getAsString();
                  //System.out.println(idxo);
                  
                  Model.addRow(new Object[]{nombrexo,generoxo,"","","",anoxo,"","",""});
             }
    }//GEN-LAST:event_btnConsultaDActionPerformed

    private void btnConsultaEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaEActionPerformed
        DefaultTableModel Model = (DefaultTableModel) jTable1.getModel();
           //Clear Jtable1 
           while(Model.getRowCount() > 0){
               for(int i =0; i<Model.getRowCount(); i++){
                   Model.removeRow(i);
               }
           }
           // Connect to MongoDB Server on localhost, port 27017 (default)
           mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
           // Connect to Database "test"
           database = mongoClient.getDatabase("test");
           //System.out.println("Successful database connection established. \n");   
           collection = database.getCollection("TestMovies");
           String nombrexo;
           String generoxo;
           String directorxo;
           String franquiciaxo;
           String paisxo;
           String anoxo;
           String duracionxo;
           String companiaxo;
           String actoresxo;
           String idxo;
           
           String Companiaxyz = txtCompania.getText();
           
            //Find and print ALL documents in the collection
            //System.out.println("Printing all the documents.");
            FindIterable<Document> cursor = collection.find(new BasicDBObject("Compania", Companiaxyz));
             for(Document doc : cursor){
                  Document thirdxx = (Document) doc;
                  String objectx = thirdxx.toJson();
                  //System.out.println(objectx);
                  JsonObject jsonObject = new JsonParser().parse(objectx).getAsJsonObject();
                  nombrexo = jsonObject.get("Nombre").getAsString();
                  generoxo = jsonObject.get("Genero").getAsString();
                  directorxo = jsonObject.get("Director").getAsString();
                  franquiciaxo = jsonObject.get("Franquicia").getAsString();
                  paisxo = jsonObject.get("Pais").getAsString();
                  anoxo = jsonObject.get("Ano").getAsString();
                  duracionxo = jsonObject.get("Duracion").getAsString();
                  companiaxo = jsonObject.get("Compania").getAsString();
                  actoresxo = jsonObject.get("Actores").getAsString();
                  //idxo = jsonObject.get("$oid").getAsString();
                  //System.out.println(idxo);
                  
                  Model.addRow(new Object[]{nombrexo,generoxo,directorxo,franquiciaxo,paisxo,anoxo,duracionxo,companiaxo,actoresxo});
             }
             int cantofrows = jTable1.getRowCount();
             txtConsultaE.setText(Integer.toString(cantofrows));
    }//GEN-LAST:event_btnConsultaEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormConsultas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCOnsultaB;
    private javax.swing.JButton btnConsultaA;
    private javax.swing.JButton btnConsultaC;
    private javax.swing.JButton btnConsultaD;
    private javax.swing.JButton btnConsultaE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAnoDesde;
    private javax.swing.JTextField txtAnoHasta;
    private javax.swing.JTextField txtCompania;
    private javax.swing.JTextField txtConsultaE;
    private javax.swing.JTextField txtFranquicia;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
